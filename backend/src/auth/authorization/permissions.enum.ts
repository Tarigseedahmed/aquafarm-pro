export enum Permission {
  TENANT_READ = 'tenant.read',
  TENANT_CREATE = 'tenant.create',
  TENANT_UPDATE = 'tenant.update',
  TENANT_DELETE = 'tenant.delete',
  USER_READ = 'user.read',
  USER_WRITE = 'user.write',
  FARM_READ = 'farm.read',
  FARM_CREATE = 'farm.create',
  FARM_UPDATE = 'farm.update',
  FARM_DELETE = 'farm.delete',
  POND_READ = 'pond.read',
  POND_CREATE = 'pond.create',
  POND_UPDATE = 'pond.update',
  POND_DELETE = 'pond.delete',
  FISHBATCH_READ = 'fish-batch.read',
  FISHBATCH_CREATE = 'fish-batch.create',
  FISHBATCH_UPDATE = 'fish-batch.update',
  FISHBATCH_DELETE = 'fish-batch.delete',
  FEEDING_READ = 'feeding.read',
  FEEDING_CREATE = 'feeding.create',
  FEEDING_UPDATE = 'feeding.update',
  FEEDING_DELETE = 'feeding.delete',
  WATER_QUALITY_READ = 'water-quality.read',
  WATER_QUALITY_CREATE = 'water-quality.create',
  WATER_QUALITY_UPDATE = 'water-quality.update',
  WATER_QUALITY_DELETE = 'water-quality.delete',
  NOTIFICATION_READ = 'notification.read',
  NOTIFICATION_WRITE = 'notification.write',
  AUDIT_READ = 'audit.read',
}

// Legacy roles kept (admin, user, viewer, editor) for backward compatibility until full migration.
// New structured roles aligned with RBAC design document.
export const RolePermissions: Record<string, Permission[]> = {
  super_admin: [
    Permission.TENANT_READ,
    Permission.TENANT_CREATE,
    Permission.TENANT_UPDATE,
    Permission.TENANT_DELETE,
    Permission.USER_READ,
    Permission.USER_WRITE,
    Permission.FARM_READ,
    Permission.FARM_CREATE,
    Permission.FARM_UPDATE,
    Permission.FARM_DELETE,
    Permission.POND_READ,
    Permission.POND_CREATE,
    Permission.POND_UPDATE,
    Permission.POND_DELETE,
    Permission.FISHBATCH_READ,
    Permission.FISHBATCH_CREATE,
    Permission.FISHBATCH_UPDATE,
    Permission.FISHBATCH_DELETE,
    Permission.FEEDING_READ,
    Permission.FEEDING_CREATE,
    Permission.FEEDING_UPDATE,
    Permission.FEEDING_DELETE,
    Permission.WATER_QUALITY_READ,
    Permission.WATER_QUALITY_CREATE,
    Permission.WATER_QUALITY_UPDATE,
    Permission.WATER_QUALITY_DELETE,
    Permission.NOTIFICATION_READ,
    Permission.NOTIFICATION_WRITE,
    Permission.AUDIT_READ,
  ],
  tenant_admin: [
    Permission.TENANT_READ,
    Permission.USER_READ,
    Permission.USER_WRITE,
    Permission.FARM_READ,
    Permission.FARM_CREATE,
    Permission.FARM_UPDATE,
    Permission.FARM_DELETE,
    Permission.POND_READ,
    Permission.POND_CREATE,
    Permission.POND_UPDATE,
    Permission.POND_DELETE,
    Permission.FISHBATCH_READ,
    Permission.FISHBATCH_CREATE,
    Permission.FISHBATCH_UPDATE,
    Permission.FISHBATCH_DELETE,
    Permission.FEEDING_READ,
    Permission.FEEDING_CREATE,
    Permission.FEEDING_UPDATE,
    Permission.FEEDING_DELETE,
    Permission.WATER_QUALITY_READ,
    Permission.WATER_QUALITY_CREATE,
    Permission.WATER_QUALITY_UPDATE,
    Permission.WATER_QUALITY_DELETE,
    Permission.NOTIFICATION_READ,
    Permission.NOTIFICATION_WRITE,
    Permission.AUDIT_READ,
  ],
  farm_manager: [
    Permission.FARM_READ,
    Permission.FARM_CREATE,
    Permission.FARM_UPDATE,
    Permission.POND_READ,
    Permission.POND_CREATE,
    Permission.POND_UPDATE,
    Permission.FISHBATCH_READ,
    Permission.FISHBATCH_CREATE,
    Permission.FISHBATCH_UPDATE,
    Permission.FEEDING_READ,
    Permission.FEEDING_CREATE,
    Permission.FEEDING_UPDATE,
    Permission.WATER_QUALITY_READ,
    Permission.WATER_QUALITY_CREATE,
    Permission.WATER_QUALITY_UPDATE,
    Permission.NOTIFICATION_READ,
  ],
  pond_operator: [
    Permission.POND_READ,
    Permission.POND_UPDATE,
    Permission.FISHBATCH_READ,
    Permission.FISHBATCH_UPDATE,
    Permission.FEEDING_READ,
    Permission.FEEDING_CREATE,
    Permission.WATER_QUALITY_READ,
    Permission.WATER_QUALITY_CREATE,
    Permission.WATER_QUALITY_UPDATE,
    Permission.NOTIFICATION_READ,
  ],
  accountant: [
    // Accounting-specific permissions would be added later; placeholder for now.
    Permission.FARM_READ,
    Permission.POND_READ,
    Permission.FISHBATCH_READ,
    Permission.FEEDING_READ,
    Permission.WATER_QUALITY_READ,
    Permission.NOTIFICATION_READ,
    Permission.AUDIT_READ,
  ],
  viewer: [
    Permission.TENANT_READ,
    Permission.FARM_READ,
    Permission.POND_READ,
    Permission.WATER_QUALITY_READ,
    Permission.FISHBATCH_READ,
    Permission.FEEDING_READ,
    Permission.NOTIFICATION_READ,
  ],
  // Legacy roles mapping
  admin: [
    Permission.TENANT_READ,
    Permission.TENANT_CREATE,
    Permission.TENANT_UPDATE,
    Permission.TENANT_DELETE,
    Permission.USER_READ,
    Permission.USER_WRITE,
    Permission.FARM_READ,
    Permission.FARM_CREATE,
    Permission.FARM_UPDATE,
    Permission.POND_READ,
    Permission.POND_CREATE,
    Permission.POND_UPDATE,
    Permission.FISHBATCH_READ,
    Permission.FISHBATCH_CREATE,
    Permission.FISHBATCH_UPDATE,
    Permission.FEEDING_READ,
    Permission.FEEDING_CREATE,
    Permission.FEEDING_UPDATE,
    Permission.WATER_QUALITY_READ,
    Permission.WATER_QUALITY_CREATE,
    Permission.WATER_QUALITY_UPDATE,
    Permission.NOTIFICATION_READ,
    Permission.NOTIFICATION_WRITE,
    Permission.AUDIT_READ,
  ],
  user: [
    Permission.TENANT_READ,
    Permission.FARM_READ,
    Permission.FARM_CREATE,
    Permission.FARM_UPDATE,
    Permission.POND_READ,
    Permission.POND_CREATE,
    Permission.POND_UPDATE,
    Permission.FISHBATCH_READ,
    Permission.FISHBATCH_CREATE,
    Permission.FISHBATCH_UPDATE,
    Permission.FEEDING_READ,
    Permission.FEEDING_CREATE,
    Permission.WATER_QUALITY_READ,
    Permission.WATER_QUALITY_CREATE,
    Permission.NOTIFICATION_READ,
  ],
  editor: [
    Permission.TENANT_READ,
    Permission.USER_READ,
    Permission.USER_WRITE,
    Permission.FARM_READ,
    Permission.FARM_CREATE,
    Permission.FARM_UPDATE,
    Permission.POND_READ,
    Permission.POND_CREATE,
    Permission.POND_UPDATE,
    Permission.FISHBATCH_READ,
    Permission.FISHBATCH_UPDATE,
    Permission.FEEDING_READ,
    Permission.FEEDING_UPDATE,
    Permission.WATER_QUALITY_READ,
    Permission.WATER_QUALITY_UPDATE,
    Permission.NOTIFICATION_READ,
  ],
};

export function permissionsForRole(role?: string): Permission[] {
  return RolePermissions[role || 'user'] || [];
}
