apiVersion: v1
kind: Secret
metadata:
  name: backend-secret
  namespace: aquafarm-prod
type: Opaque
data:
  database-url: cG9zdGdyZXM6Ly9hcXVhZmFybTphcXVhZmFybV9wYXNzd29yZEBwb3N0Z3Jlczo1NDMyL2FxdWFmYXJt  # postgres://aquafarm:aquafarm_password@postgres:5432/aquafarm
  redis-url: cmVkaXM6Ly9yZWRpczpcmZGlzX3Bhc3N3b3JkQHJlZGlzOjYzNzk=  # redis://redis:redis_password@redis:6379
  jwt-secret: eW91cl9qd3Rfc2VjcmV0X2tleV9oZXJl  # your_jwt_secret_key_here
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: aquafarm-prod
data:
  NODE_ENV: production
  PORT: "4000"
  LOG_LEVEL: info
  CORS_ORIGIN: "https://aquafarm-pro.com"
  RATE_LIMIT_WINDOW: "900000"
  RATE_LIMIT_MAX: "100"
  AI_MODEL_PATH: "/app/models"
  BACKUP_SCHEDULE: "0 2 * * *"
  MONITORING_ENABLED: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: aquafarm-prod
  labels:
    app: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: aquafarm/backend:latest
        ports:
        - containerPort: 4000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: backend-secret
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: backend-secret
              key: redis-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: backend-secret
              key: jwt-secret
        envFrom:
        - configMapRef:
            name: backend-config
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "2"
            memory: "4Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: 4000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 4000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: model-storage
          mountPath: /app/models
        - name: backup-storage
          mountPath: /app/backups
      volumes:
      - name: model-storage
        persistentVolumeClaim:
          claimName: model-pvc
      - name: backup-storage
        persistentVolumeClaim:
          claimName: backup-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: model-pvc
  namespace: aquafarm-prod
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 20Gi
  storageClassName: fast-ssd
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backup-pvc
  namespace: aquafarm-prod
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: fast-ssd
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: aquafarm-prod
  labels:
    app: backend
spec:
  ports:
  - port: 4000
    targetPort: 4000
    name: backend
  selector:
    app: backend
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-hpa
  namespace: aquafarm-prod
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
