version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: aquafarm-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: aquafarm_dev
      POSTGRES_USER: aquafarm
      POSTGRES_PASSWORD: aquafarm123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - aquafarm-network
    command: >
      postgres
      -c log_statement=all
      -c log_destination=stderr
      -c logging_collector=on
      -c log_min_duration_statement=0
      -c log_line_prefix='%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: aquafarm-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - aquafarm-network

  # Backend API (NestJS) - Development Mode
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: aquafarm-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: aquafarm_dev
      DB_USER: aquafarm
      DB_PASSWORD: aquafarm123
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: aquafarm-pro-super-secure-jwt-secret-key-for-development-only-2025
      CORS_ORIGIN: http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    networks:
      - aquafarm-network
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run start:dev

  # Frontend (Next.js) - Development Mode
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: aquafarm-frontend
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3000
      NEXT_PUBLIC_APP_URL: http://localhost:3001
      NODE_ENV: development
    ports:
      - "3001:3000"
    depends_on:
      - backend
    networks:
      - aquafarm-network
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next

# Volumes
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

# Networks
networks:
  aquafarm-network:
    driver: bridge
