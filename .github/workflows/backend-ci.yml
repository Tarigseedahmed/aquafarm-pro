name: Backend CI

on:
  push:
    branches: [ main, develop, 'feature/*' ]
    paths:
      - 'backend/**'
      - 'docs/api/openapi.yaml'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - 'docs/api/openapi.yaml'

permissions:
  contents: read

concurrency:
  group: backend-ci-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  openapi-lint:
    name: OpenAPI Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Spectral
        run: npm install -g @stoplight/spectral-cli@6
      - name: Lint OpenAPI (docs/api/openapi.yaml)
        run: spectral lint docs/api/openapi.yaml --fail-severity=warn || (echo "::error::OpenAPI lint errors" && exit 1)

  lint:
    name: Lint & Type Check
    needs: openapi-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      - name: Install deps
        working-directory: backend
        run: npm ci
      - name: ESLint (CI strict)
        working-directory: backend
        run: npm run lint:ci
      - name: Type Check (build dry run)
        working-directory: backend
        run: npm run build --silent

  unit:
    name: Unit Tests & Coverage
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      - name: Install deps
        working-directory: backend
        run: npm ci
      - name: Run Unit Tests (Coverage)
        working-directory: backend
        run: npm run test:cov
      - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: backend/coverage
          if-no-files-found: warn
      - name: Security Audit (non-blocking high)
        working-directory: backend
        run: |
          npm audit --audit-level=high || echo "Audit high issues present (review manually)"

  e2e:
    name: E2E (SQLite & Postgres)
    needs: unit
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        db: [ sqlite, postgres ]
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: aquafarm
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres" --health-interval=5s --health-timeout=5s --health-retries=5
    env:
      NODE_ENV: test
      SERVICE_NAME: aquafarm-backend
      DB_TYPE: ${{ matrix.db }}
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/aquafarm
      JWT_SECRET: testsecret
      DEFAULT_TENANT_ID: default-tenant
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      - name: Install deps
        working-directory: backend
        run: npm ci
      - name: Build
        working-directory: backend
        run: npm run build
      - name: Run E2E Tests
        working-directory: backend
        run: |
          if [[ "${{ matrix.db }}" == "postgres" ]]; then export MIGRATIONS_RUN=true; fi
          npm run test:e2e -- --runInBand
      - name: Show logs on failure
        if: failure()
        run: |
          echo "Tests failed. Listing backend dist tree (depth 2):";
          find backend/dist -maxdepth 2 -type f -print 2>/dev/null | head -50 || true
